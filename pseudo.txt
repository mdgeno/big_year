-ask the user for input '?'

-the program recognises the below commands;
	add 	- adds a bird, then proceeds to;
		- ask user to input 'Name: '
		- ask user to input 'Name in Latin: '

		-take in the name inputs and create a bird object
			then store it in the bird array.

	spotted - adds a sighting
		- if not in database of birds, the program then
			outputs 'Not a bird!'		

	all 	- prints all birds
		- outputs all birds and displays information
			'NameOfBird (Latin Name): number of sightings

	one 	- prints one bird
		- asks the user 'Bird?', takes in the string value
			representing the name of the bird.
		- then outputs the full information of the 
			single bird which the name was entered.
			(format the same from All command)
		
	quit - ends the program

-struct BirdArray
	array: [Bird; 5]
	
	impl BirdArray
		add
		one
		all
 
+

-struct Bird
	name: 
	name in latin
	mut sighting
	
	impl Bird
		print

OR 

-enum BirdDatabase
	Bird{ name:
	      latin_name:
	      sighting:
	    }
	BirdArray{array: [Bird; 5]} or??
	BirdArray([Bird; 5])

	impl BirdDatabase
		add
		one
		all
		spotted

??

CONTINUE HERE!!
-So an array of Bird objects is possible. We now just have to find
a way to create a series of Bird objs through a loop construct,
and simultaneously store it in the array of Bird objs.




